#!/usr/bin/env python2
PACKAGE = "move_smooth"

import roslib; roslib.load_manifest(PACKAGE)
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
gen.add("max_angular_velocity", double_t, 0, "Max angular velocity [rad/s]", 1.0, 0, 4.0)
gen.add("max_lateral_velocity", double_t, 0, "Max lateral velocity (when going straight) [rad/s]", 0.5,  0, 4.0)
gen.add("max_angular_acceleration", double_t, 0, "Max Angular acceleration [rad^2/s]", 0.3, 0.01, 4.0)
gen.add("max_linear_velocity", double_t, 0, "Max linear velocity [m/s]", 0.5, 0, 1.1)
gen.add("max_lateral_dev", double_t, 0, "Max lateral deviation from path [m]", 0.1, 0, 5.0)
gen.add("max_linear_acceleration", double_t, 0, "Max linearacceleration [m^2/s]", 0.1, 0, 1.1)

gen.add("linear_tolerance", double_t, 0, "Linear tolerance [m]", 0.1, 0, 1.0)

gen.add("lateral_kp", double_t, 0, "Lateral P", 0.5, 0, 20.0)
gen.add("lateral_ki", double_t, 0, "Lateral I", 0.0, 0, 20.0)
gen.add("lateral_kd", double_t, 0, "Lateral D", 3.0, 0, 20.0)

gen.add("min_side_dist", double_t, 0, "Minimum obstacle free side distance [m]", 0.3, 0, 5.0)
gen.add("runaway_timeout", double_t, 0, "Driving away from goal timeout [s]", 1.0, 0, 60.0)
gen.add("forward_obstacle_threshold", double_t, 0, "Forward obstacle threshold [m]", 1.0, 0.0, 3.0)
gen.add("reverse_without_turning_threshold", double_t, 0, "Reverse distance without turning [m]", 1.0, 0, 3.0)



exit(gen.generate(PACKAGE, "move_smooth", "Movesmooth"))
